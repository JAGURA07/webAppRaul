{"ast":null,"code":"const API_URL = 'http://localhost:5000/api/alumnos';\nimport { getAuth } from 'firebase/auth';\nconst getAuthToken = async () => {\n  const auth = getAuth();\n  const user = auth.currentUser;\n  if (user) {\n    return await user.getIdToken();\n  }\n  return null;\n};\nexport const addAlumno = async (alumno, fotos) => {\n  const formData = new FormData();\n  formData.append('uid', alumno.uid);\n  formData.append('nombre', alumno.nombre);\n  formData.append('numeroBoleta', alumno.numeroBoleta);\n  formData.append('numeroPlaca', alumno.numeroPlaca);\n  if (fotos.fotoPerfil) formData.append('fotoPerfil', fotos.fotoPerfil);\n  if (fotos.fotoVehiculo) formData.append('fotoVehiculo', fotos.fotoVehiculo);\n  const token = await getAuthToken();\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    headers: token ? {\n      Authorization: `Bearer ${token}`\n    } : {},\n    body: formData\n  });\n  if (!response.ok) throw new Error('Error al registrar el alumno');\n  return response.json();\n};\nexport const getAlumno = async uid => {\n  try {\n    const token = await getAuthToken();\n    const response = await fetch(`${API_URL}/${uid}`, {\n      method: 'GET',\n      headers: token ? {\n        Authorization: `Bearer ${token}`\n      } : {}\n    });\n    if (!response.ok) {\n      throw new Error(`Error al obtener el alumno con UID: ${uid}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error en getAlumno:\", error);\n    return null;\n  }\n};\nexport const getAllAlumnos = async () => {\n  const token = await getAuthToken();\n  const response = await fetch(API_URL, {\n    method: 'GET',\n    headers: token ? {\n      Authorization: `Bearer ${token}`\n    } : {}\n  });\n  if (!response.ok) throw new Error('Error al obtener los alumnos');\n  return response.json();\n};","map":{"version":3,"names":["API_URL","getAuth","getAuthToken","auth","user","currentUser","getIdToken","addAlumno","alumno","fotos","formData","FormData","append","uid","nombre","numeroBoleta","numeroPlaca","fotoPerfil","fotoVehiculo","token","response","fetch","method","headers","Authorization","body","ok","Error","json","getAlumno","error","console","getAllAlumnos"],"sources":["/home/jagura/Desktop/webapp/src/database/db.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api/alumnos';\nimport { getAuth } from 'firebase/auth';\n\nconst getAuthToken = async () => {\n  const auth = getAuth();\n  const user = auth.currentUser;\n  if (user) {\n    return await user.getIdToken();\n  }\n  return null;\n};\n\nexport const addAlumno = async (alumno, fotos) => {\n  const formData = new FormData();\n  formData.append('uid', alumno.uid);\n  formData.append('nombre', alumno.nombre);\n  formData.append('numeroBoleta', alumno.numeroBoleta);\n  formData.append('numeroPlaca', alumno.numeroPlaca);\n  if (fotos.fotoPerfil) formData.append('fotoPerfil', fotos.fotoPerfil);\n  if (fotos.fotoVehiculo) formData.append('fotoVehiculo', fotos.fotoVehiculo);\n\n  const token = await getAuthToken();\n\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    headers: token ? { Authorization: `Bearer ${token}` } : {},\n    body: formData,\n  });\n\n  if (!response.ok) throw new Error('Error al registrar el alumno');\n  return response.json();\n};\n\nexport const getAlumno = async (uid) => {\n  try {\n    const token = await getAuthToken();\n\n    const response = await fetch(`${API_URL}/${uid}`, {\n      method: 'GET',\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error al obtener el alumno con UID: ${uid}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error en getAlumno:\", error);\n    return null;\n  }\n};\n\nexport const getAllAlumnos = async () => {\n  const token = await getAuthToken();\n\n  const response = await fetch(API_URL, {\n    method: 'GET',\n    headers: token ? { Authorization: `Bearer ${token}` } : {},\n  });\n\n  if (!response.ok) throw new Error('Error al obtener los alumnos');\n  return response.json();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}