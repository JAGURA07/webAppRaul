{"ast":null,"code":"var _jsxFileName = \"/home/jagura/Desktop/webapp/src/components/policiaDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PoliciaDashboard() {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const [parking, setParking] = useState({\n    autos: 200,\n    motos: 80\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchParkingStatus();\n  }, []);\n  const fetchParkingStatus = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/parking-status\");\n      setParking(response.data);\n    } catch (err) {\n      setError(\"Error al obtener estado del estacionamiento\");\n    }\n  };\n  const handleScan = async data => {\n    if (data) {\n      setScanResult(data);\n      try {\n        const response = await axios.post(\"http://localhost:5000/registro-entrada\", {\n          uid: data\n        });\n        alert(`Registro exitoso para UID: ${data}`);\n        fetchParkingStatus();\n      } catch (err) {\n        setError(\"Error en el registro de entrada/salida\");\n      }\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n    setError(\"Error al acceder a la c√°mara\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Dashboard de Polic\\xEDa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-scanner mt-5\",\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onError: handleError,\n        onScan: handleScan,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), scanResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2\",\n      children: [\"QR Detectado: \", scanResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold\",\n        children: \"Estado del Estacionamiento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDE97 Autos disponibles: \", parking.autos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDFCD Motos disponibles: \", parking.motos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PoliciaDashboard, \"b9Tr8o3UVWzNaTxUs2KV+paRPMc=\");\n_c = PoliciaDashboard;\nvar _c;\n$RefreshReg$(_c, \"PoliciaDashboard\");","map":{"version":3,"names":["React","useState","useEffect","QrReader","axios","jsxDEV","_jsxDEV","PoliciaDashboard","_s","scanResult","setScanResult","parking","setParking","autos","motos","error","setError","fetchParkingStatus","response","get","data","err","handleScan","post","uid","alert","handleError","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onScan","style","width","_c","$RefreshReg$"],"sources":["/home/jagura/Desktop/webapp/src/components/policiaDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport axios from \"axios\";\n\nexport default function PoliciaDashboard() {\n  const [scanResult, setScanResult] = useState(null);\n  const [parking, setParking] = useState({ autos: 200, motos: 80 });\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchParkingStatus();\n  }, []);\n\n  const fetchParkingStatus = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/parking-status\");\n      setParking(response.data);\n    } catch (err) {\n      setError(\"Error al obtener estado del estacionamiento\");\n    }\n  };\n\n  const handleScan = async (data) => {\n    if (data) {\n      setScanResult(data);\n      try {\n        const response = await axios.post(\"http://localhost:5000/registro-entrada\", { uid: data });\n        alert(`Registro exitoso para UID: ${data}`);\n        fetchParkingStatus();\n      } catch (err) {\n        setError(\"Error en el registro de entrada/salida\");\n      }\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n    setError(\"Error al acceder a la c√°mara\");\n  };\n\n  return (\n    <div className=\"p-5\">\n      <h1 className=\"text-2xl font-bold\">Dashboard de Polic√≠a</h1>\n      <div className=\"qr-scanner mt-5\">\n        <QrReader delay={300} onError={handleError} onScan={handleScan} style={{ width: \"100%\" }} />\n      </div>\n      {scanResult && <p className=\"mt-2\">QR Detectado: {scanResult}</p>}\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n      <div className=\"mt-5\">\n        <h2 className=\"text-xl font-bold\">Estado del Estacionamiento</h2>\n        <p>üöó Autos disponibles: {parking.autos}</p>\n        <p>üèç Motos disponibles: {parking.motos}</p>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}